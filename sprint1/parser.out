Created by PLY (http://www.dabeaz.com/ply)

Unused terminals:

    NONE
    PERIOD
    PRINT
    TAB

Grammar

Rule 0     S' -> program
Rule 1     program -> statement
Rule 2     program -> block
Rule 3     block -> statement_lst
Rule 4     statement_lst -> statement_lst statement
Rule 5     statement_lst -> statement
Rule 6     expression -> ID
Rule 7     expression -> assignment
Rule 8     expression -> primitive_literal
Rule 9     type -> primitive_type
Rule 10    type -> non_primitive_type
Rule 11    primitive_type -> TINT
Rule 12    primitive_type -> TSTR
Rule 13    primitive_type -> TFLOAT
Rule 14    primitive_type -> TBOOL
Rule 15    non_primitive_type -> LBRACKET type RBRACKET
Rule 16    non_primitive_type -> LPAREN type RPAREN
Rule 17    primitive_literal -> INTEGER
Rule 18    primitive_literal -> FLOAT
Rule 19    primitive_literal -> STRING
Rule 20    primitive_literal -> BOOL
Rule 21    assignment -> ID ASSIGN expression NEWLINE
Rule 22    assignment -> ID COLON type ASSIGN expression NEWLINE
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression TIMES expression
Rule 26    expression -> expression DIVIDE expression
Rule 27    expression -> expression MODULE expression
Rule 28    expression -> expression EQGREATER expression
Rule 29    expression -> expression EQLESS expression
Rule 30    expression -> expression GREATER expression
Rule 31    expression -> expression LESS expression
Rule 32    expression -> expression EQUAL expression
Rule 33    expression -> expression NOTEQUAL expression
Rule 34    expression -> expression OR expression
Rule 35    expression -> expression AND expression
Rule 36    expression -> expression XOR expression
Rule 37    expression -> MINUS expression
Rule 38    expression -> NOT expression
Rule 39    expression -> LBRACKET RBRACKET
Rule 40    list -> LBRACKET expression
Rule 41    list -> list COMMA expression
Rule 42    expression -> list RBRACKET
Rule 43    expression -> expression APPEND LPAREN expression RPAREN
Rule 44    expression -> LPAREN RPAREN
Rule 45    tuple -> LPAREN expression COMMA expression
Rule 46    tuple -> tuple COMMA expression
Rule 47    expression -> tuple RPAREN
Rule 48    expression -> LPAREN expression RPAREN
Rule 49    statement -> statement_no_new_line NEWLINE
Rule 50    statement -> assignment
Rule 51    statement_no_new_line -> function_dec
Rule 52    statement_no_new_line -> function_call
Rule 53    statement_no_new_line -> return_stmt
Rule 54    statement_no_new_line -> if_statement
Rule 55    statement_no_new_line -> elif_statement
Rule 56    statement_no_new_line -> else_statement
Rule 57    statement_no_new_line -> while_statement
Rule 58    statement_no_new_line -> for_loop_range
Rule 59    statement_no_new_line -> for_loop_lst
Rule 60    function_dec -> DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON
Rule 61    paramter_or_empty -> parameter_lst
Rule 62    paramter_or_empty -> empty
Rule 63    parameter_lst -> parameter_lst COMMA parameter
Rule 64    parameter_lst -> parameter
Rule 65    parameter -> ID COLON type
Rule 66    function_call -> ID LPAREN argument_or_empty RPAREN
Rule 67    argument_or_empty -> argument_lst
Rule 68    argument_or_empty -> empty
Rule 69    argument_lst -> argument_lst COMMA expression
Rule 70    argument_lst -> expression
Rule 71    return_stmt -> RETURN expression
Rule 72    if_statement -> IF expression COLON
Rule 73    elif_statement -> ELIF expression COLON
Rule 74    else_statement -> ELSE COLON
Rule 75    for_loop_range -> FOR ID IN range COLON
Rule 76    range -> RANGE LPAREN expression RPAREN
Rule 77    range -> RANGE LPAREN expression COMMA expression RPAREN
Rule 78    range -> RANGE LPAREN expression COMMA expression COMMA expression RPAREN
Rule 79    for_loop_lst -> FOR ID IN non_primitive_type COLON
Rule 80    for_loop_lst -> FOR ID IN ID COLON
Rule 81    while_statement -> WHILE expression COLON
Rule 82    empty -> <empty>

Terminals, with rules where they appear

AND                  : 35
APPEND               : 43
ASSIGN               : 21 22
BOOL                 : 20
COLON                : 22 60 65 72 73 74 75 79 80 81
COMMA                : 41 45 46 63 69 77 78 78
DEF                  : 60
DIVIDE               : 26
ELIF                 : 73
ELSE                 : 74
EQGREATER            : 28
EQLESS               : 29
EQUAL                : 32
FLOAT                : 18
FOR                  : 75 79 80
FUNCTIONANNOTATION   : 60
GREATER              : 30
ID                   : 6 21 22 60 65 66 75 79 80 80
IF                   : 72
IN                   : 75 79 80
INTEGER              : 17
LBRACKET             : 15 39 40
LESS                 : 31
LPAREN               : 16 43 44 45 48 60 66 76 77 78
MINUS                : 24 37
MODULE               : 27
NEWLINE              : 21 22 49
NONE                 : 
NOT                  : 38
NOTEQUAL             : 33
OR                   : 34
PERIOD               : 
PLUS                 : 23
PRINT                : 
RANGE                : 76 77 78
RBRACKET             : 15 39 42
RETURN               : 71
RPAREN               : 16 43 44 47 48 60 66 76 77 78
STRING               : 19
TAB                  : 
TBOOL                : 14
TFLOAT               : 13
TIMES                : 25
TINT                 : 11
TSTR                 : 12
WHILE                : 81
XOR                  : 36
error                : 

Nonterminals, with rules where they appear

argument_lst         : 67 69
argument_or_empty    : 66
assignment           : 7 50
block                : 2
elif_statement       : 55
else_statement       : 56
empty                : 62 68
expression           : 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 38 40 41 43 43 45 45 46 48 69 70 71 72 73 76 77 77 78 78 78 81
for_loop_lst         : 59
for_loop_range       : 58
function_call        : 52
function_dec         : 51
if_statement         : 54
list                 : 41 42
non_primitive_type   : 10 79
parameter            : 63 64
parameter_lst        : 61 63
paramter_or_empty    : 60
primitive_literal    : 8
primitive_type       : 9
program              : 0
range                : 75
return_stmt          : 53
statement            : 1 4 5
statement_lst        : 3 4
statement_no_new_line : 49
tuple                : 46 47
type                 : 15 16 22 60 65
while_statement      : 57


state 0

    (0) S' -> . program
    (1) program -> . statement
    (2) program -> . block
    (49) statement -> . statement_no_new_line NEWLINE
    (50) statement -> . assignment
    (3) block -> . statement_lst
    (51) statement_no_new_line -> . function_dec
    (52) statement_no_new_line -> . function_call
    (53) statement_no_new_line -> . return_stmt
    (54) statement_no_new_line -> . if_statement
    (55) statement_no_new_line -> . elif_statement
    (56) statement_no_new_line -> . else_statement
    (57) statement_no_new_line -> . while_statement
    (58) statement_no_new_line -> . for_loop_range
    (59) statement_no_new_line -> . for_loop_lst
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (4) statement_lst -> . statement_lst statement
    (5) statement_lst -> . statement
    (60) function_dec -> . DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON
    (66) function_call -> . ID LPAREN argument_or_empty RPAREN
    (71) return_stmt -> . RETURN expression
    (72) if_statement -> . IF expression COLON
    (73) elif_statement -> . ELIF expression COLON
    (74) else_statement -> . ELSE COLON
    (81) while_statement -> . WHILE expression COLON
    (75) for_loop_range -> . FOR ID IN range COLON
    (79) for_loop_lst -> . FOR ID IN non_primitive_type COLON
    (80) for_loop_lst -> . FOR ID IN ID COLON

    ID              shift and go to state 16
    DEF             shift and go to state 17
    RETURN          shift and go to state 18
    IF              shift and go to state 19
    ELIF            shift and go to state 20
    ELSE            shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    program                        shift and go to state 1
    statement                      shift and go to state 2
    block                          shift and go to state 3
    statement_no_new_line          shift and go to state 4
    assignment                     shift and go to state 5
    statement_lst                  shift and go to state 6
    function_dec                   shift and go to state 7
    function_call                  shift and go to state 8
    return_stmt                    shift and go to state 9
    if_statement                   shift and go to state 10
    elif_statement                 shift and go to state 11
    else_statement                 shift and go to state 12
    while_statement                shift and go to state 13
    for_loop_range                 shift and go to state 14
    for_loop_lst                   shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> statement .
    (5) statement_lst -> statement .

  ! reduce/reduce conflict for $end resolved using rule 1 (program -> statement .)
    $end            reduce using rule 1 (program -> statement .)
    ID              reduce using rule 5 (statement_lst -> statement .)
    DEF             reduce using rule 5 (statement_lst -> statement .)
    RETURN          reduce using rule 5 (statement_lst -> statement .)
    IF              reduce using rule 5 (statement_lst -> statement .)
    ELIF            reduce using rule 5 (statement_lst -> statement .)
    ELSE            reduce using rule 5 (statement_lst -> statement .)
    WHILE           reduce using rule 5 (statement_lst -> statement .)
    FOR             reduce using rule 5 (statement_lst -> statement .)

  ! $end            [ reduce using rule 5 (statement_lst -> statement .) ]


state 3

    (2) program -> block .

    $end            reduce using rule 2 (program -> block .)


state 4

    (49) statement -> statement_no_new_line . NEWLINE

    NEWLINE         shift and go to state 24


state 5

    (50) statement -> assignment .

    $end            reduce using rule 50 (statement -> assignment .)
    ID              reduce using rule 50 (statement -> assignment .)
    DEF             reduce using rule 50 (statement -> assignment .)
    RETURN          reduce using rule 50 (statement -> assignment .)
    IF              reduce using rule 50 (statement -> assignment .)
    ELIF            reduce using rule 50 (statement -> assignment .)
    ELSE            reduce using rule 50 (statement -> assignment .)
    WHILE           reduce using rule 50 (statement -> assignment .)
    FOR             reduce using rule 50 (statement -> assignment .)


state 6

    (3) block -> statement_lst .
    (4) statement_lst -> statement_lst . statement
    (49) statement -> . statement_no_new_line NEWLINE
    (50) statement -> . assignment
    (51) statement_no_new_line -> . function_dec
    (52) statement_no_new_line -> . function_call
    (53) statement_no_new_line -> . return_stmt
    (54) statement_no_new_line -> . if_statement
    (55) statement_no_new_line -> . elif_statement
    (56) statement_no_new_line -> . else_statement
    (57) statement_no_new_line -> . while_statement
    (58) statement_no_new_line -> . for_loop_range
    (59) statement_no_new_line -> . for_loop_lst
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (60) function_dec -> . DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON
    (66) function_call -> . ID LPAREN argument_or_empty RPAREN
    (71) return_stmt -> . RETURN expression
    (72) if_statement -> . IF expression COLON
    (73) elif_statement -> . ELIF expression COLON
    (74) else_statement -> . ELSE COLON
    (81) while_statement -> . WHILE expression COLON
    (75) for_loop_range -> . FOR ID IN range COLON
    (79) for_loop_lst -> . FOR ID IN non_primitive_type COLON
    (80) for_loop_lst -> . FOR ID IN ID COLON

    $end            reduce using rule 3 (block -> statement_lst .)
    ID              shift and go to state 16
    DEF             shift and go to state 17
    RETURN          shift and go to state 18
    IF              shift and go to state 19
    ELIF            shift and go to state 20
    ELSE            shift and go to state 21
    WHILE           shift and go to state 22
    FOR             shift and go to state 23

    statement                      shift and go to state 25
    statement_no_new_line          shift and go to state 4
    assignment                     shift and go to state 5
    function_dec                   shift and go to state 7
    function_call                  shift and go to state 8
    return_stmt                    shift and go to state 9
    if_statement                   shift and go to state 10
    elif_statement                 shift and go to state 11
    else_statement                 shift and go to state 12
    while_statement                shift and go to state 13
    for_loop_range                 shift and go to state 14
    for_loop_lst                   shift and go to state 15

state 7

    (51) statement_no_new_line -> function_dec .

    NEWLINE         reduce using rule 51 (statement_no_new_line -> function_dec .)


state 8

    (52) statement_no_new_line -> function_call .

    NEWLINE         reduce using rule 52 (statement_no_new_line -> function_call .)


state 9

    (53) statement_no_new_line -> return_stmt .

    NEWLINE         reduce using rule 53 (statement_no_new_line -> return_stmt .)


state 10

    (54) statement_no_new_line -> if_statement .

    NEWLINE         reduce using rule 54 (statement_no_new_line -> if_statement .)


state 11

    (55) statement_no_new_line -> elif_statement .

    NEWLINE         reduce using rule 55 (statement_no_new_line -> elif_statement .)


state 12

    (56) statement_no_new_line -> else_statement .

    NEWLINE         reduce using rule 56 (statement_no_new_line -> else_statement .)


state 13

    (57) statement_no_new_line -> while_statement .

    NEWLINE         reduce using rule 57 (statement_no_new_line -> while_statement .)


state 14

    (58) statement_no_new_line -> for_loop_range .

    NEWLINE         reduce using rule 58 (statement_no_new_line -> for_loop_range .)


state 15

    (59) statement_no_new_line -> for_loop_lst .

    NEWLINE         reduce using rule 59 (statement_no_new_line -> for_loop_lst .)


state 16

    (21) assignment -> ID . ASSIGN expression NEWLINE
    (22) assignment -> ID . COLON type ASSIGN expression NEWLINE
    (66) function_call -> ID . LPAREN argument_or_empty RPAREN

    ASSIGN          shift and go to state 26
    COLON           shift and go to state 27
    LPAREN          shift and go to state 28


state 17

    (60) function_dec -> DEF . ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON

    ID              shift and go to state 29


state 18

    (71) return_stmt -> RETURN . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 30
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 19

    (72) if_statement -> IF . expression COLON
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 44
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 20

    (73) elif_statement -> ELIF . expression COLON
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 45
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 21

    (74) else_statement -> ELSE . COLON

    COLON           shift and go to state 46


state 22

    (81) while_statement -> WHILE . expression COLON
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 47
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 23

    (75) for_loop_range -> FOR . ID IN range COLON
    (79) for_loop_lst -> FOR . ID IN non_primitive_type COLON
    (80) for_loop_lst -> FOR . ID IN ID COLON

    ID              shift and go to state 48


state 24

    (49) statement -> statement_no_new_line NEWLINE .

    $end            reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    ID              reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    DEF             reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    RETURN          reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    IF              reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    ELIF            reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    ELSE            reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    WHILE           reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)
    FOR             reduce using rule 49 (statement -> statement_no_new_line NEWLINE .)


state 25

    (4) statement_lst -> statement_lst statement .

    ID              reduce using rule 4 (statement_lst -> statement_lst statement .)
    DEF             reduce using rule 4 (statement_lst -> statement_lst statement .)
    RETURN          reduce using rule 4 (statement_lst -> statement_lst statement .)
    IF              reduce using rule 4 (statement_lst -> statement_lst statement .)
    ELIF            reduce using rule 4 (statement_lst -> statement_lst statement .)
    ELSE            reduce using rule 4 (statement_lst -> statement_lst statement .)
    WHILE           reduce using rule 4 (statement_lst -> statement_lst statement .)
    FOR             reduce using rule 4 (statement_lst -> statement_lst statement .)
    $end            reduce using rule 4 (statement_lst -> statement_lst statement .)


state 26

    (21) assignment -> ID ASSIGN . expression NEWLINE
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 49
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 27

    (22) assignment -> ID COLON . type ASSIGN expression NEWLINE
    (9) type -> . primitive_type
    (10) type -> . non_primitive_type
    (11) primitive_type -> . TINT
    (12) primitive_type -> . TSTR
    (13) primitive_type -> . TFLOAT
    (14) primitive_type -> . TBOOL
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    TINT            shift and go to state 53
    TSTR            shift and go to state 54
    TFLOAT          shift and go to state 55
    TBOOL           shift and go to state 56
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    type                           shift and go to state 50
    primitive_type                 shift and go to state 51
    non_primitive_type             shift and go to state 52

state 28

    (66) function_call -> ID LPAREN . argument_or_empty RPAREN
    (67) argument_or_empty -> . argument_lst
    (68) argument_or_empty -> . empty
    (69) argument_lst -> . argument_lst COMMA expression
    (70) argument_lst -> . expression
    (82) empty -> .
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    RPAREN          reduce using rule 82 (empty -> .)
    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    argument_or_empty              shift and go to state 59
    argument_lst                   shift and go to state 60
    empty                          shift and go to state 61
    expression                     shift and go to state 62
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 29

    (60) function_dec -> DEF ID . LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON

    LPAREN          shift and go to state 63


state 30

    (71) return_stmt -> RETURN expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    NEWLINE         reduce using rule 71 (return_stmt -> RETURN expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 31

    (6) expression -> ID .
    (21) assignment -> ID . ASSIGN expression NEWLINE
    (22) assignment -> ID . COLON type ASSIGN expression NEWLINE

  ! shift/reduce conflict for COLON resolved as shift
    PLUS            reduce using rule 6 (expression -> ID .)
    MINUS           reduce using rule 6 (expression -> ID .)
    TIMES           reduce using rule 6 (expression -> ID .)
    DIVIDE          reduce using rule 6 (expression -> ID .)
    MODULE          reduce using rule 6 (expression -> ID .)
    EQGREATER       reduce using rule 6 (expression -> ID .)
    EQLESS          reduce using rule 6 (expression -> ID .)
    GREATER         reduce using rule 6 (expression -> ID .)
    LESS            reduce using rule 6 (expression -> ID .)
    EQUAL           reduce using rule 6 (expression -> ID .)
    NOTEQUAL        reduce using rule 6 (expression -> ID .)
    OR              reduce using rule 6 (expression -> ID .)
    AND             reduce using rule 6 (expression -> ID .)
    XOR             reduce using rule 6 (expression -> ID .)
    APPEND          reduce using rule 6 (expression -> ID .)
    NEWLINE         reduce using rule 6 (expression -> ID .)
    COMMA           reduce using rule 6 (expression -> ID .)
    RPAREN          reduce using rule 6 (expression -> ID .)
    RBRACKET        reduce using rule 6 (expression -> ID .)
    ASSIGN          shift and go to state 26
    COLON           shift and go to state 27

  ! COLON           [ reduce using rule 6 (expression -> ID .) ]


state 32

    (7) expression -> assignment .

    PLUS            reduce using rule 7 (expression -> assignment .)
    MINUS           reduce using rule 7 (expression -> assignment .)
    TIMES           reduce using rule 7 (expression -> assignment .)
    DIVIDE          reduce using rule 7 (expression -> assignment .)
    MODULE          reduce using rule 7 (expression -> assignment .)
    EQGREATER       reduce using rule 7 (expression -> assignment .)
    EQLESS          reduce using rule 7 (expression -> assignment .)
    GREATER         reduce using rule 7 (expression -> assignment .)
    LESS            reduce using rule 7 (expression -> assignment .)
    EQUAL           reduce using rule 7 (expression -> assignment .)
    NOTEQUAL        reduce using rule 7 (expression -> assignment .)
    OR              reduce using rule 7 (expression -> assignment .)
    AND             reduce using rule 7 (expression -> assignment .)
    XOR             reduce using rule 7 (expression -> assignment .)
    APPEND          reduce using rule 7 (expression -> assignment .)
    NEWLINE         reduce using rule 7 (expression -> assignment .)
    COLON           reduce using rule 7 (expression -> assignment .)
    COMMA           reduce using rule 7 (expression -> assignment .)
    RPAREN          reduce using rule 7 (expression -> assignment .)
    RBRACKET        reduce using rule 7 (expression -> assignment .)


state 33

    (8) expression -> primitive_literal .

    PLUS            reduce using rule 8 (expression -> primitive_literal .)
    MINUS           reduce using rule 8 (expression -> primitive_literal .)
    TIMES           reduce using rule 8 (expression -> primitive_literal .)
    DIVIDE          reduce using rule 8 (expression -> primitive_literal .)
    MODULE          reduce using rule 8 (expression -> primitive_literal .)
    EQGREATER       reduce using rule 8 (expression -> primitive_literal .)
    EQLESS          reduce using rule 8 (expression -> primitive_literal .)
    GREATER         reduce using rule 8 (expression -> primitive_literal .)
    LESS            reduce using rule 8 (expression -> primitive_literal .)
    EQUAL           reduce using rule 8 (expression -> primitive_literal .)
    NOTEQUAL        reduce using rule 8 (expression -> primitive_literal .)
    OR              reduce using rule 8 (expression -> primitive_literal .)
    AND             reduce using rule 8 (expression -> primitive_literal .)
    XOR             reduce using rule 8 (expression -> primitive_literal .)
    APPEND          reduce using rule 8 (expression -> primitive_literal .)
    NEWLINE         reduce using rule 8 (expression -> primitive_literal .)
    COLON           reduce using rule 8 (expression -> primitive_literal .)
    COMMA           reduce using rule 8 (expression -> primitive_literal .)
    RPAREN          reduce using rule 8 (expression -> primitive_literal .)
    RBRACKET        reduce using rule 8 (expression -> primitive_literal .)


state 34

    (37) expression -> MINUS . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 79
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 35

    (38) expression -> NOT . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 80
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 36

    (39) expression -> LBRACKET . RBRACKET
    (40) list -> LBRACKET . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    RBRACKET        shift and go to state 81
    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 82
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 37

    (42) expression -> list . RBRACKET
    (41) list -> list . COMMA expression

    RBRACKET        shift and go to state 83
    COMMA           shift and go to state 84


state 38

    (44) expression -> LPAREN . RPAREN
    (48) expression -> LPAREN . expression RPAREN
    (45) tuple -> LPAREN . expression COMMA expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    RPAREN          shift and go to state 85
    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 86
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 39

    (47) expression -> tuple . RPAREN
    (46) tuple -> tuple . COMMA expression

    RPAREN          shift and go to state 87
    COMMA           shift and go to state 88


state 40

    (17) primitive_literal -> INTEGER .

    PLUS            reduce using rule 17 (primitive_literal -> INTEGER .)
    MINUS           reduce using rule 17 (primitive_literal -> INTEGER .)
    TIMES           reduce using rule 17 (primitive_literal -> INTEGER .)
    DIVIDE          reduce using rule 17 (primitive_literal -> INTEGER .)
    MODULE          reduce using rule 17 (primitive_literal -> INTEGER .)
    EQGREATER       reduce using rule 17 (primitive_literal -> INTEGER .)
    EQLESS          reduce using rule 17 (primitive_literal -> INTEGER .)
    GREATER         reduce using rule 17 (primitive_literal -> INTEGER .)
    LESS            reduce using rule 17 (primitive_literal -> INTEGER .)
    EQUAL           reduce using rule 17 (primitive_literal -> INTEGER .)
    NOTEQUAL        reduce using rule 17 (primitive_literal -> INTEGER .)
    OR              reduce using rule 17 (primitive_literal -> INTEGER .)
    AND             reduce using rule 17 (primitive_literal -> INTEGER .)
    XOR             reduce using rule 17 (primitive_literal -> INTEGER .)
    APPEND          reduce using rule 17 (primitive_literal -> INTEGER .)
    NEWLINE         reduce using rule 17 (primitive_literal -> INTEGER .)
    COLON           reduce using rule 17 (primitive_literal -> INTEGER .)
    COMMA           reduce using rule 17 (primitive_literal -> INTEGER .)
    RPAREN          reduce using rule 17 (primitive_literal -> INTEGER .)
    RBRACKET        reduce using rule 17 (primitive_literal -> INTEGER .)


state 41

    (18) primitive_literal -> FLOAT .

    PLUS            reduce using rule 18 (primitive_literal -> FLOAT .)
    MINUS           reduce using rule 18 (primitive_literal -> FLOAT .)
    TIMES           reduce using rule 18 (primitive_literal -> FLOAT .)
    DIVIDE          reduce using rule 18 (primitive_literal -> FLOAT .)
    MODULE          reduce using rule 18 (primitive_literal -> FLOAT .)
    EQGREATER       reduce using rule 18 (primitive_literal -> FLOAT .)
    EQLESS          reduce using rule 18 (primitive_literal -> FLOAT .)
    GREATER         reduce using rule 18 (primitive_literal -> FLOAT .)
    LESS            reduce using rule 18 (primitive_literal -> FLOAT .)
    EQUAL           reduce using rule 18 (primitive_literal -> FLOAT .)
    NOTEQUAL        reduce using rule 18 (primitive_literal -> FLOAT .)
    OR              reduce using rule 18 (primitive_literal -> FLOAT .)
    AND             reduce using rule 18 (primitive_literal -> FLOAT .)
    XOR             reduce using rule 18 (primitive_literal -> FLOAT .)
    APPEND          reduce using rule 18 (primitive_literal -> FLOAT .)
    NEWLINE         reduce using rule 18 (primitive_literal -> FLOAT .)
    COLON           reduce using rule 18 (primitive_literal -> FLOAT .)
    COMMA           reduce using rule 18 (primitive_literal -> FLOAT .)
    RPAREN          reduce using rule 18 (primitive_literal -> FLOAT .)
    RBRACKET        reduce using rule 18 (primitive_literal -> FLOAT .)


state 42

    (19) primitive_literal -> STRING .

    PLUS            reduce using rule 19 (primitive_literal -> STRING .)
    MINUS           reduce using rule 19 (primitive_literal -> STRING .)
    TIMES           reduce using rule 19 (primitive_literal -> STRING .)
    DIVIDE          reduce using rule 19 (primitive_literal -> STRING .)
    MODULE          reduce using rule 19 (primitive_literal -> STRING .)
    EQGREATER       reduce using rule 19 (primitive_literal -> STRING .)
    EQLESS          reduce using rule 19 (primitive_literal -> STRING .)
    GREATER         reduce using rule 19 (primitive_literal -> STRING .)
    LESS            reduce using rule 19 (primitive_literal -> STRING .)
    EQUAL           reduce using rule 19 (primitive_literal -> STRING .)
    NOTEQUAL        reduce using rule 19 (primitive_literal -> STRING .)
    OR              reduce using rule 19 (primitive_literal -> STRING .)
    AND             reduce using rule 19 (primitive_literal -> STRING .)
    XOR             reduce using rule 19 (primitive_literal -> STRING .)
    APPEND          reduce using rule 19 (primitive_literal -> STRING .)
    NEWLINE         reduce using rule 19 (primitive_literal -> STRING .)
    COLON           reduce using rule 19 (primitive_literal -> STRING .)
    COMMA           reduce using rule 19 (primitive_literal -> STRING .)
    RPAREN          reduce using rule 19 (primitive_literal -> STRING .)
    RBRACKET        reduce using rule 19 (primitive_literal -> STRING .)


state 43

    (20) primitive_literal -> BOOL .

    PLUS            reduce using rule 20 (primitive_literal -> BOOL .)
    MINUS           reduce using rule 20 (primitive_literal -> BOOL .)
    TIMES           reduce using rule 20 (primitive_literal -> BOOL .)
    DIVIDE          reduce using rule 20 (primitive_literal -> BOOL .)
    MODULE          reduce using rule 20 (primitive_literal -> BOOL .)
    EQGREATER       reduce using rule 20 (primitive_literal -> BOOL .)
    EQLESS          reduce using rule 20 (primitive_literal -> BOOL .)
    GREATER         reduce using rule 20 (primitive_literal -> BOOL .)
    LESS            reduce using rule 20 (primitive_literal -> BOOL .)
    EQUAL           reduce using rule 20 (primitive_literal -> BOOL .)
    NOTEQUAL        reduce using rule 20 (primitive_literal -> BOOL .)
    OR              reduce using rule 20 (primitive_literal -> BOOL .)
    AND             reduce using rule 20 (primitive_literal -> BOOL .)
    XOR             reduce using rule 20 (primitive_literal -> BOOL .)
    APPEND          reduce using rule 20 (primitive_literal -> BOOL .)
    NEWLINE         reduce using rule 20 (primitive_literal -> BOOL .)
    COLON           reduce using rule 20 (primitive_literal -> BOOL .)
    COMMA           reduce using rule 20 (primitive_literal -> BOOL .)
    RPAREN          reduce using rule 20 (primitive_literal -> BOOL .)
    RBRACKET        reduce using rule 20 (primitive_literal -> BOOL .)


state 44

    (72) if_statement -> IF expression . COLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    COLON           shift and go to state 89
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 45

    (73) elif_statement -> ELIF expression . COLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    COLON           shift and go to state 90
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 46

    (74) else_statement -> ELSE COLON .

    NEWLINE         reduce using rule 74 (else_statement -> ELSE COLON .)


state 47

    (81) while_statement -> WHILE expression . COLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    COLON           shift and go to state 91
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 48

    (75) for_loop_range -> FOR ID . IN range COLON
    (79) for_loop_lst -> FOR ID . IN non_primitive_type COLON
    (80) for_loop_lst -> FOR ID . IN ID COLON

    IN              shift and go to state 92


state 49

    (21) assignment -> ID ASSIGN expression . NEWLINE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    NEWLINE         shift and go to state 93
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 50

    (22) assignment -> ID COLON type . ASSIGN expression NEWLINE

    ASSIGN          shift and go to state 94


state 51

    (9) type -> primitive_type .

    ASSIGN          reduce using rule 9 (type -> primitive_type .)
    RBRACKET        reduce using rule 9 (type -> primitive_type .)
    RPAREN          reduce using rule 9 (type -> primitive_type .)
    COMMA           reduce using rule 9 (type -> primitive_type .)
    COLON           reduce using rule 9 (type -> primitive_type .)


state 52

    (10) type -> non_primitive_type .

    ASSIGN          reduce using rule 10 (type -> non_primitive_type .)
    RBRACKET        reduce using rule 10 (type -> non_primitive_type .)
    RPAREN          reduce using rule 10 (type -> non_primitive_type .)
    COMMA           reduce using rule 10 (type -> non_primitive_type .)
    COLON           reduce using rule 10 (type -> non_primitive_type .)


state 53

    (11) primitive_type -> TINT .

    ASSIGN          reduce using rule 11 (primitive_type -> TINT .)
    RBRACKET        reduce using rule 11 (primitive_type -> TINT .)
    RPAREN          reduce using rule 11 (primitive_type -> TINT .)
    COMMA           reduce using rule 11 (primitive_type -> TINT .)
    COLON           reduce using rule 11 (primitive_type -> TINT .)


state 54

    (12) primitive_type -> TSTR .

    ASSIGN          reduce using rule 12 (primitive_type -> TSTR .)
    RBRACKET        reduce using rule 12 (primitive_type -> TSTR .)
    RPAREN          reduce using rule 12 (primitive_type -> TSTR .)
    COMMA           reduce using rule 12 (primitive_type -> TSTR .)
    COLON           reduce using rule 12 (primitive_type -> TSTR .)


state 55

    (13) primitive_type -> TFLOAT .

    ASSIGN          reduce using rule 13 (primitive_type -> TFLOAT .)
    RBRACKET        reduce using rule 13 (primitive_type -> TFLOAT .)
    RPAREN          reduce using rule 13 (primitive_type -> TFLOAT .)
    COMMA           reduce using rule 13 (primitive_type -> TFLOAT .)
    COLON           reduce using rule 13 (primitive_type -> TFLOAT .)


state 56

    (14) primitive_type -> TBOOL .

    ASSIGN          reduce using rule 14 (primitive_type -> TBOOL .)
    RBRACKET        reduce using rule 14 (primitive_type -> TBOOL .)
    RPAREN          reduce using rule 14 (primitive_type -> TBOOL .)
    COMMA           reduce using rule 14 (primitive_type -> TBOOL .)
    COLON           reduce using rule 14 (primitive_type -> TBOOL .)


state 57

    (15) non_primitive_type -> LBRACKET . type RBRACKET
    (9) type -> . primitive_type
    (10) type -> . non_primitive_type
    (11) primitive_type -> . TINT
    (12) primitive_type -> . TSTR
    (13) primitive_type -> . TFLOAT
    (14) primitive_type -> . TBOOL
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    TINT            shift and go to state 53
    TSTR            shift and go to state 54
    TFLOAT          shift and go to state 55
    TBOOL           shift and go to state 56
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    type                           shift and go to state 95
    primitive_type                 shift and go to state 51
    non_primitive_type             shift and go to state 52

state 58

    (16) non_primitive_type -> LPAREN . type RPAREN
    (9) type -> . primitive_type
    (10) type -> . non_primitive_type
    (11) primitive_type -> . TINT
    (12) primitive_type -> . TSTR
    (13) primitive_type -> . TFLOAT
    (14) primitive_type -> . TBOOL
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    TINT            shift and go to state 53
    TSTR            shift and go to state 54
    TFLOAT          shift and go to state 55
    TBOOL           shift and go to state 56
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    type                           shift and go to state 96
    primitive_type                 shift and go to state 51
    non_primitive_type             shift and go to state 52

state 59

    (66) function_call -> ID LPAREN argument_or_empty . RPAREN

    RPAREN          shift and go to state 97


state 60

    (67) argument_or_empty -> argument_lst .
    (69) argument_lst -> argument_lst . COMMA expression

    RPAREN          reduce using rule 67 (argument_or_empty -> argument_lst .)
    COMMA           shift and go to state 98


state 61

    (68) argument_or_empty -> empty .

    RPAREN          reduce using rule 68 (argument_or_empty -> empty .)


state 62

    (70) argument_lst -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    COMMA           reduce using rule 70 (argument_lst -> expression .)
    RPAREN          reduce using rule 70 (argument_lst -> expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 63

    (60) function_dec -> DEF ID LPAREN . paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON
    (61) paramter_or_empty -> . parameter_lst
    (62) paramter_or_empty -> . empty
    (63) parameter_lst -> . parameter_lst COMMA parameter
    (64) parameter_lst -> . parameter
    (82) empty -> .
    (65) parameter -> . ID COLON type

    RPAREN          reduce using rule 82 (empty -> .)
    ID              shift and go to state 99

    paramter_or_empty              shift and go to state 100
    parameter_lst                  shift and go to state 101
    empty                          shift and go to state 102
    parameter                      shift and go to state 103

state 64

    (23) expression -> expression PLUS . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 104
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 65

    (24) expression -> expression MINUS . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 105
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 66

    (25) expression -> expression TIMES . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 106
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 67

    (26) expression -> expression DIVIDE . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 107
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 68

    (27) expression -> expression MODULE . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 108
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 69

    (28) expression -> expression EQGREATER . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 109
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 70

    (29) expression -> expression EQLESS . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 110
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 71

    (30) expression -> expression GREATER . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 111
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 72

    (31) expression -> expression LESS . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 112
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 73

    (32) expression -> expression EQUAL . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 113
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 74

    (33) expression -> expression NOTEQUAL . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 114
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 75

    (34) expression -> expression OR . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 115
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 76

    (35) expression -> expression AND . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 116
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 77

    (36) expression -> expression XOR . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 117
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 78

    (43) expression -> expression APPEND . LPAREN expression RPAREN

    LPAREN          shift and go to state 118


state 79

    (37) expression -> MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 37 (expression -> MINUS expression .)
    MINUS           reduce using rule 37 (expression -> MINUS expression .)
    TIMES           reduce using rule 37 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 37 (expression -> MINUS expression .)
    MODULE          reduce using rule 37 (expression -> MINUS expression .)
    EQGREATER       reduce using rule 37 (expression -> MINUS expression .)
    EQLESS          reduce using rule 37 (expression -> MINUS expression .)
    GREATER         reduce using rule 37 (expression -> MINUS expression .)
    LESS            reduce using rule 37 (expression -> MINUS expression .)
    EQUAL           reduce using rule 37 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 37 (expression -> MINUS expression .)
    OR              reduce using rule 37 (expression -> MINUS expression .)
    AND             reduce using rule 37 (expression -> MINUS expression .)
    XOR             reduce using rule 37 (expression -> MINUS expression .)
    APPEND          reduce using rule 37 (expression -> MINUS expression .)
    NEWLINE         reduce using rule 37 (expression -> MINUS expression .)
    COLON           reduce using rule 37 (expression -> MINUS expression .)
    COMMA           reduce using rule 37 (expression -> MINUS expression .)
    RPAREN          reduce using rule 37 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 37 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! MODULE          [ shift and go to state 68 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 80

    (38) expression -> NOT expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 38 (expression -> NOT expression .)
    MINUS           reduce using rule 38 (expression -> NOT expression .)
    TIMES           reduce using rule 38 (expression -> NOT expression .)
    DIVIDE          reduce using rule 38 (expression -> NOT expression .)
    MODULE          reduce using rule 38 (expression -> NOT expression .)
    EQGREATER       reduce using rule 38 (expression -> NOT expression .)
    EQLESS          reduce using rule 38 (expression -> NOT expression .)
    GREATER         reduce using rule 38 (expression -> NOT expression .)
    LESS            reduce using rule 38 (expression -> NOT expression .)
    EQUAL           reduce using rule 38 (expression -> NOT expression .)
    NOTEQUAL        reduce using rule 38 (expression -> NOT expression .)
    OR              reduce using rule 38 (expression -> NOT expression .)
    AND             reduce using rule 38 (expression -> NOT expression .)
    XOR             reduce using rule 38 (expression -> NOT expression .)
    APPEND          reduce using rule 38 (expression -> NOT expression .)
    NEWLINE         reduce using rule 38 (expression -> NOT expression .)
    COLON           reduce using rule 38 (expression -> NOT expression .)
    COMMA           reduce using rule 38 (expression -> NOT expression .)
    RPAREN          reduce using rule 38 (expression -> NOT expression .)
    RBRACKET        reduce using rule 38 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! MODULE          [ shift and go to state 68 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 81

    (39) expression -> LBRACKET RBRACKET .

    PLUS            reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    MODULE          reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    EQGREATER       reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    EQLESS          reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    GREATER         reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    LESS            reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    EQUAL           reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    NOTEQUAL        reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    OR              reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    AND             reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    XOR             reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    APPEND          reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    NEWLINE         reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    COLON           reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 39 (expression -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 39 (expression -> LBRACKET RBRACKET .)


state 82

    (40) list -> LBRACKET expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RBRACKET        reduce using rule 40 (list -> LBRACKET expression .)
    COMMA           reduce using rule 40 (list -> LBRACKET expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 83

    (42) expression -> list RBRACKET .

    PLUS            reduce using rule 42 (expression -> list RBRACKET .)
    MINUS           reduce using rule 42 (expression -> list RBRACKET .)
    TIMES           reduce using rule 42 (expression -> list RBRACKET .)
    DIVIDE          reduce using rule 42 (expression -> list RBRACKET .)
    MODULE          reduce using rule 42 (expression -> list RBRACKET .)
    EQGREATER       reduce using rule 42 (expression -> list RBRACKET .)
    EQLESS          reduce using rule 42 (expression -> list RBRACKET .)
    GREATER         reduce using rule 42 (expression -> list RBRACKET .)
    LESS            reduce using rule 42 (expression -> list RBRACKET .)
    EQUAL           reduce using rule 42 (expression -> list RBRACKET .)
    NOTEQUAL        reduce using rule 42 (expression -> list RBRACKET .)
    OR              reduce using rule 42 (expression -> list RBRACKET .)
    AND             reduce using rule 42 (expression -> list RBRACKET .)
    XOR             reduce using rule 42 (expression -> list RBRACKET .)
    APPEND          reduce using rule 42 (expression -> list RBRACKET .)
    NEWLINE         reduce using rule 42 (expression -> list RBRACKET .)
    COLON           reduce using rule 42 (expression -> list RBRACKET .)
    COMMA           reduce using rule 42 (expression -> list RBRACKET .)
    RPAREN          reduce using rule 42 (expression -> list RBRACKET .)
    RBRACKET        reduce using rule 42 (expression -> list RBRACKET .)


state 84

    (41) list -> list COMMA . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    list                           shift and go to state 37
    expression                     shift and go to state 119
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    tuple                          shift and go to state 39

state 85

    (44) expression -> LPAREN RPAREN .

    PLUS            reduce using rule 44 (expression -> LPAREN RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN RPAREN .)
    MODULE          reduce using rule 44 (expression -> LPAREN RPAREN .)
    EQGREATER       reduce using rule 44 (expression -> LPAREN RPAREN .)
    EQLESS          reduce using rule 44 (expression -> LPAREN RPAREN .)
    GREATER         reduce using rule 44 (expression -> LPAREN RPAREN .)
    LESS            reduce using rule 44 (expression -> LPAREN RPAREN .)
    EQUAL           reduce using rule 44 (expression -> LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 44 (expression -> LPAREN RPAREN .)
    OR              reduce using rule 44 (expression -> LPAREN RPAREN .)
    AND             reduce using rule 44 (expression -> LPAREN RPAREN .)
    XOR             reduce using rule 44 (expression -> LPAREN RPAREN .)
    APPEND          reduce using rule 44 (expression -> LPAREN RPAREN .)
    NEWLINE         reduce using rule 44 (expression -> LPAREN RPAREN .)
    COLON           reduce using rule 44 (expression -> LPAREN RPAREN .)
    COMMA           reduce using rule 44 (expression -> LPAREN RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN RPAREN .)
    RBRACKET        reduce using rule 44 (expression -> LPAREN RPAREN .)


state 86

    (48) expression -> LPAREN expression . RPAREN
    (45) tuple -> LPAREN expression . COMMA expression
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          shift and go to state 120
    COMMA           shift and go to state 121
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 87

    (47) expression -> tuple RPAREN .

    PLUS            reduce using rule 47 (expression -> tuple RPAREN .)
    MINUS           reduce using rule 47 (expression -> tuple RPAREN .)
    TIMES           reduce using rule 47 (expression -> tuple RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> tuple RPAREN .)
    MODULE          reduce using rule 47 (expression -> tuple RPAREN .)
    EQGREATER       reduce using rule 47 (expression -> tuple RPAREN .)
    EQLESS          reduce using rule 47 (expression -> tuple RPAREN .)
    GREATER         reduce using rule 47 (expression -> tuple RPAREN .)
    LESS            reduce using rule 47 (expression -> tuple RPAREN .)
    EQUAL           reduce using rule 47 (expression -> tuple RPAREN .)
    NOTEQUAL        reduce using rule 47 (expression -> tuple RPAREN .)
    OR              reduce using rule 47 (expression -> tuple RPAREN .)
    AND             reduce using rule 47 (expression -> tuple RPAREN .)
    XOR             reduce using rule 47 (expression -> tuple RPAREN .)
    APPEND          reduce using rule 47 (expression -> tuple RPAREN .)
    NEWLINE         reduce using rule 47 (expression -> tuple RPAREN .)
    COLON           reduce using rule 47 (expression -> tuple RPAREN .)
    COMMA           reduce using rule 47 (expression -> tuple RPAREN .)
    RPAREN          reduce using rule 47 (expression -> tuple RPAREN .)
    RBRACKET        reduce using rule 47 (expression -> tuple RPAREN .)


state 88

    (46) tuple -> tuple COMMA . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    tuple                          shift and go to state 39
    expression                     shift and go to state 122
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37

state 89

    (72) if_statement -> IF expression COLON .

    NEWLINE         reduce using rule 72 (if_statement -> IF expression COLON .)


state 90

    (73) elif_statement -> ELIF expression COLON .

    NEWLINE         reduce using rule 73 (elif_statement -> ELIF expression COLON .)


state 91

    (81) while_statement -> WHILE expression COLON .

    NEWLINE         reduce using rule 81 (while_statement -> WHILE expression COLON .)


state 92

    (75) for_loop_range -> FOR ID IN . range COLON
    (79) for_loop_lst -> FOR ID IN . non_primitive_type COLON
    (80) for_loop_lst -> FOR ID IN . ID COLON
    (76) range -> . RANGE LPAREN expression RPAREN
    (77) range -> . RANGE LPAREN expression COMMA expression RPAREN
    (78) range -> . RANGE LPAREN expression COMMA expression COMMA expression RPAREN
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    ID              shift and go to state 123
    RANGE           shift and go to state 126
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    range                          shift and go to state 124
    non_primitive_type             shift and go to state 125

state 93

    (21) assignment -> ID ASSIGN expression NEWLINE .

    $end            reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    ID              reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    DEF             reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    RETURN          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    IF              reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    ELIF            reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    ELSE            reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    WHILE           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    FOR             reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    PLUS            reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    MINUS           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    TIMES           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    DIVIDE          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    MODULE          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    EQGREATER       reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    EQLESS          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    GREATER         reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    LESS            reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    EQUAL           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    NOTEQUAL        reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    OR              reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    AND             reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    XOR             reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    APPEND          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    NEWLINE         reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    COLON           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    COMMA           reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    RPAREN          reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)
    RBRACKET        reduce using rule 21 (assignment -> ID ASSIGN expression NEWLINE .)


state 94

    (22) assignment -> ID COLON type ASSIGN . expression NEWLINE
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 127
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 95

    (15) non_primitive_type -> LBRACKET type . RBRACKET

    RBRACKET        shift and go to state 128


state 96

    (16) non_primitive_type -> LPAREN type . RPAREN

    RPAREN          shift and go to state 129


state 97

    (66) function_call -> ID LPAREN argument_or_empty RPAREN .

    NEWLINE         reduce using rule 66 (function_call -> ID LPAREN argument_or_empty RPAREN .)


state 98

    (69) argument_lst -> argument_lst COMMA . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 130
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 99

    (65) parameter -> ID . COLON type

    COLON           shift and go to state 131


state 100

    (60) function_dec -> DEF ID LPAREN paramter_or_empty . RPAREN FUNCTIONANNOTATION type COLON

    RPAREN          shift and go to state 132


state 101

    (61) paramter_or_empty -> parameter_lst .
    (63) parameter_lst -> parameter_lst . COMMA parameter

    RPAREN          reduce using rule 61 (paramter_or_empty -> parameter_lst .)
    COMMA           shift and go to state 133


state 102

    (62) paramter_or_empty -> empty .

    RPAREN          reduce using rule 62 (paramter_or_empty -> empty .)


state 103

    (64) parameter_lst -> parameter .

    COMMA           reduce using rule 64 (parameter_lst -> parameter .)
    RPAREN          reduce using rule 64 (parameter_lst -> parameter .)


state 104

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    EQGREATER       reduce using rule 23 (expression -> expression PLUS expression .)
    EQLESS          reduce using rule 23 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 23 (expression -> expression PLUS expression .)
    LESS            reduce using rule 23 (expression -> expression PLUS expression .)
    EQUAL           reduce using rule 23 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression PLUS expression .)
    OR              reduce using rule 23 (expression -> expression PLUS expression .)
    AND             reduce using rule 23 (expression -> expression PLUS expression .)
    XOR             reduce using rule 23 (expression -> expression PLUS expression .)
    APPEND          reduce using rule 23 (expression -> expression PLUS expression .)
    NEWLINE         reduce using rule 23 (expression -> expression PLUS expression .)
    COLON           reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 23 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 23 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68

  ! TIMES           [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 105

    (24) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    EQGREATER       reduce using rule 24 (expression -> expression MINUS expression .)
    EQLESS          reduce using rule 24 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 24 (expression -> expression MINUS expression .)
    LESS            reduce using rule 24 (expression -> expression MINUS expression .)
    EQUAL           reduce using rule 24 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression MINUS expression .)
    OR              reduce using rule 24 (expression -> expression MINUS expression .)
    AND             reduce using rule 24 (expression -> expression MINUS expression .)
    XOR             reduce using rule 24 (expression -> expression MINUS expression .)
    APPEND          reduce using rule 24 (expression -> expression MINUS expression .)
    NEWLINE         reduce using rule 24 (expression -> expression MINUS expression .)
    COLON           reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 24 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 24 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68

  ! TIMES           [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 106

    (25) expression -> expression TIMES expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 25 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 25 (expression -> expression TIMES expression .)
    EQGREATER       reduce using rule 25 (expression -> expression TIMES expression .)
    EQLESS          reduce using rule 25 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 25 (expression -> expression TIMES expression .)
    LESS            reduce using rule 25 (expression -> expression TIMES expression .)
    EQUAL           reduce using rule 25 (expression -> expression TIMES expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression TIMES expression .)
    OR              reduce using rule 25 (expression -> expression TIMES expression .)
    AND             reduce using rule 25 (expression -> expression TIMES expression .)
    XOR             reduce using rule 25 (expression -> expression TIMES expression .)
    APPEND          reduce using rule 25 (expression -> expression TIMES expression .)
    NEWLINE         reduce using rule 25 (expression -> expression TIMES expression .)
    COLON           reduce using rule 25 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 25 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 25 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 25 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! MODULE          [ shift and go to state 68 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 107

    (26) expression -> expression DIVIDE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 26 (expression -> expression DIVIDE expression .)
    EQGREATER       reduce using rule 26 (expression -> expression DIVIDE expression .)
    EQLESS          reduce using rule 26 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 26 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 26 (expression -> expression DIVIDE expression .)
    EQUAL           reduce using rule 26 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 26 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 26 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 26 (expression -> expression DIVIDE expression .)
    APPEND          reduce using rule 26 (expression -> expression DIVIDE expression .)
    NEWLINE         reduce using rule 26 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 26 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 26 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 26 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 26 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! MODULE          [ shift and go to state 68 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 108

    (27) expression -> expression MODULE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    PLUS            reduce using rule 27 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 27 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 27 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 27 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 27 (expression -> expression MODULE expression .)
    EQGREATER       reduce using rule 27 (expression -> expression MODULE expression .)
    EQLESS          reduce using rule 27 (expression -> expression MODULE expression .)
    GREATER         reduce using rule 27 (expression -> expression MODULE expression .)
    LESS            reduce using rule 27 (expression -> expression MODULE expression .)
    EQUAL           reduce using rule 27 (expression -> expression MODULE expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression MODULE expression .)
    OR              reduce using rule 27 (expression -> expression MODULE expression .)
    AND             reduce using rule 27 (expression -> expression MODULE expression .)
    XOR             reduce using rule 27 (expression -> expression MODULE expression .)
    APPEND          reduce using rule 27 (expression -> expression MODULE expression .)
    NEWLINE         reduce using rule 27 (expression -> expression MODULE expression .)
    COLON           reduce using rule 27 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 27 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 27 (expression -> expression MODULE expression .)
    RBRACKET        reduce using rule 27 (expression -> expression MODULE expression .)

  ! PLUS            [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TIMES           [ shift and go to state 66 ]
  ! DIVIDE          [ shift and go to state 67 ]
  ! MODULE          [ shift and go to state 68 ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 109

    (28) expression -> expression EQGREATER expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 28 (expression -> expression EQGREATER expression .)
    EQLESS          reduce using rule 28 (expression -> expression EQGREATER expression .)
    GREATER         reduce using rule 28 (expression -> expression EQGREATER expression .)
    LESS            reduce using rule 28 (expression -> expression EQGREATER expression .)
    EQUAL           reduce using rule 28 (expression -> expression EQGREATER expression .)
    NOTEQUAL        reduce using rule 28 (expression -> expression EQGREATER expression .)
    XOR             reduce using rule 28 (expression -> expression EQGREATER expression .)
    APPEND          reduce using rule 28 (expression -> expression EQGREATER expression .)
    NEWLINE         reduce using rule 28 (expression -> expression EQGREATER expression .)
    COLON           reduce using rule 28 (expression -> expression EQGREATER expression .)
    COMMA           reduce using rule 28 (expression -> expression EQGREATER expression .)
    RPAREN          reduce using rule 28 (expression -> expression EQGREATER expression .)
    RBRACKET        reduce using rule 28 (expression -> expression EQGREATER expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! MODULE          [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression EQGREATER expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 110

    (29) expression -> expression EQLESS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 29 (expression -> expression EQLESS expression .)
    EQLESS          reduce using rule 29 (expression -> expression EQLESS expression .)
    GREATER         reduce using rule 29 (expression -> expression EQLESS expression .)
    LESS            reduce using rule 29 (expression -> expression EQLESS expression .)
    EQUAL           reduce using rule 29 (expression -> expression EQLESS expression .)
    NOTEQUAL        reduce using rule 29 (expression -> expression EQLESS expression .)
    XOR             reduce using rule 29 (expression -> expression EQLESS expression .)
    APPEND          reduce using rule 29 (expression -> expression EQLESS expression .)
    NEWLINE         reduce using rule 29 (expression -> expression EQLESS expression .)
    COLON           reduce using rule 29 (expression -> expression EQLESS expression .)
    COMMA           reduce using rule 29 (expression -> expression EQLESS expression .)
    RPAREN          reduce using rule 29 (expression -> expression EQLESS expression .)
    RBRACKET        reduce using rule 29 (expression -> expression EQLESS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! MODULE          [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression EQLESS expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 111

    (30) expression -> expression GREATER expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 30 (expression -> expression GREATER expression .)
    EQLESS          reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 30 (expression -> expression GREATER expression .)
    LESS            reduce using rule 30 (expression -> expression GREATER expression .)
    EQUAL           reduce using rule 30 (expression -> expression GREATER expression .)
    NOTEQUAL        reduce using rule 30 (expression -> expression GREATER expression .)
    XOR             reduce using rule 30 (expression -> expression GREATER expression .)
    APPEND          reduce using rule 30 (expression -> expression GREATER expression .)
    NEWLINE         reduce using rule 30 (expression -> expression GREATER expression .)
    COLON           reduce using rule 30 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 30 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 30 (expression -> expression GREATER expression .)
    RBRACKET        reduce using rule 30 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! MODULE          [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 112

    (31) expression -> expression LESS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 31 (expression -> expression LESS expression .)
    EQLESS          reduce using rule 31 (expression -> expression LESS expression .)
    GREATER         reduce using rule 31 (expression -> expression LESS expression .)
    LESS            reduce using rule 31 (expression -> expression LESS expression .)
    EQUAL           reduce using rule 31 (expression -> expression LESS expression .)
    NOTEQUAL        reduce using rule 31 (expression -> expression LESS expression .)
    XOR             reduce using rule 31 (expression -> expression LESS expression .)
    APPEND          reduce using rule 31 (expression -> expression LESS expression .)
    NEWLINE         reduce using rule 31 (expression -> expression LESS expression .)
    COLON           reduce using rule 31 (expression -> expression LESS expression .)
    COMMA           reduce using rule 31 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 31 (expression -> expression LESS expression .)
    RBRACKET        reduce using rule 31 (expression -> expression LESS expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! MODULE          [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 31 (expression -> expression LESS expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 113

    (32) expression -> expression EQUAL expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 32 (expression -> expression EQUAL expression .)
    EQLESS          reduce using rule 32 (expression -> expression EQUAL expression .)
    GREATER         reduce using rule 32 (expression -> expression EQUAL expression .)
    LESS            reduce using rule 32 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 32 (expression -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 32 (expression -> expression EQUAL expression .)
    XOR             reduce using rule 32 (expression -> expression EQUAL expression .)
    APPEND          reduce using rule 32 (expression -> expression EQUAL expression .)
    NEWLINE         reduce using rule 32 (expression -> expression EQUAL expression .)
    COLON           reduce using rule 32 (expression -> expression EQUAL expression .)
    COMMA           reduce using rule 32 (expression -> expression EQUAL expression .)
    RPAREN          reduce using rule 32 (expression -> expression EQUAL expression .)
    RBRACKET        reduce using rule 32 (expression -> expression EQUAL expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! MODULE          [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression EQUAL expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 114

    (33) expression -> expression NOTEQUAL expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    EQLESS          reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    GREATER         reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    LESS            reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    XOR             reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    APPEND          reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    NEWLINE         reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    COLON           reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    COMMA           reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    RPAREN          reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    RBRACKET        reduce using rule 33 (expression -> expression NOTEQUAL expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! MODULE          [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! AND             [ reduce using rule 33 (expression -> expression NOTEQUAL expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 115

    (34) expression -> expression OR expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 34 (expression -> expression OR expression .)
    EQLESS          reduce using rule 34 (expression -> expression OR expression .)
    GREATER         reduce using rule 34 (expression -> expression OR expression .)
    LESS            reduce using rule 34 (expression -> expression OR expression .)
    EQUAL           reduce using rule 34 (expression -> expression OR expression .)
    NOTEQUAL        reduce using rule 34 (expression -> expression OR expression .)
    OR              reduce using rule 34 (expression -> expression OR expression .)
    AND             reduce using rule 34 (expression -> expression OR expression .)
    XOR             reduce using rule 34 (expression -> expression OR expression .)
    APPEND          reduce using rule 34 (expression -> expression OR expression .)
    NEWLINE         reduce using rule 34 (expression -> expression OR expression .)
    COLON           reduce using rule 34 (expression -> expression OR expression .)
    COMMA           reduce using rule 34 (expression -> expression OR expression .)
    RPAREN          reduce using rule 34 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 34 (expression -> expression OR expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68

  ! PLUS            [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 34 (expression -> expression OR expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 116

    (35) expression -> expression AND expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 35 (expression -> expression AND expression .)
    EQLESS          reduce using rule 35 (expression -> expression AND expression .)
    GREATER         reduce using rule 35 (expression -> expression AND expression .)
    LESS            reduce using rule 35 (expression -> expression AND expression .)
    EQUAL           reduce using rule 35 (expression -> expression AND expression .)
    NOTEQUAL        reduce using rule 35 (expression -> expression AND expression .)
    OR              reduce using rule 35 (expression -> expression AND expression .)
    AND             reduce using rule 35 (expression -> expression AND expression .)
    XOR             reduce using rule 35 (expression -> expression AND expression .)
    APPEND          reduce using rule 35 (expression -> expression AND expression .)
    NEWLINE         reduce using rule 35 (expression -> expression AND expression .)
    COLON           reduce using rule 35 (expression -> expression AND expression .)
    COMMA           reduce using rule 35 (expression -> expression AND expression .)
    RPAREN          reduce using rule 35 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 35 (expression -> expression AND expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68

  ! PLUS            [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> expression AND expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! OR              [ shift and go to state 75 ]
  ! AND             [ shift and go to state 76 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 117

    (36) expression -> expression XOR expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    EQGREATER       reduce using rule 36 (expression -> expression XOR expression .)
    EQLESS          reduce using rule 36 (expression -> expression XOR expression .)
    GREATER         reduce using rule 36 (expression -> expression XOR expression .)
    LESS            reduce using rule 36 (expression -> expression XOR expression .)
    EQUAL           reduce using rule 36 (expression -> expression XOR expression .)
    NOTEQUAL        reduce using rule 36 (expression -> expression XOR expression .)
    XOR             reduce using rule 36 (expression -> expression XOR expression .)
    APPEND          reduce using rule 36 (expression -> expression XOR expression .)
    NEWLINE         reduce using rule 36 (expression -> expression XOR expression .)
    COLON           reduce using rule 36 (expression -> expression XOR expression .)
    COMMA           reduce using rule 36 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 36 (expression -> expression XOR expression .)
    RBRACKET        reduce using rule 36 (expression -> expression XOR expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    OR              shift and go to state 75
    AND             shift and go to state 76

  ! PLUS            [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! MODULE          [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! OR              [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! AND             [ reduce using rule 36 (expression -> expression XOR expression .) ]
  ! EQGREATER       [ shift and go to state 69 ]
  ! EQLESS          [ shift and go to state 70 ]
  ! GREATER         [ shift and go to state 71 ]
  ! LESS            [ shift and go to state 72 ]
  ! EQUAL           [ shift and go to state 73 ]
  ! NOTEQUAL        [ shift and go to state 74 ]
  ! XOR             [ shift and go to state 77 ]
  ! APPEND          [ shift and go to state 78 ]


state 118

    (43) expression -> expression APPEND LPAREN . expression RPAREN
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 134
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 119

    (41) list -> list COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RBRACKET        reduce using rule 41 (list -> list COMMA expression .)
    COMMA           reduce using rule 41 (list -> list COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 120

    (48) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQGREATER       reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQLESS          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    APPEND          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COLON           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 48 (expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 48 (expression -> LPAREN expression RPAREN .)


state 121

    (45) tuple -> LPAREN expression COMMA . expression
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 135
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 122

    (46) tuple -> tuple COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          reduce using rule 46 (tuple -> tuple COMMA expression .)
    COMMA           reduce using rule 46 (tuple -> tuple COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 123

    (80) for_loop_lst -> FOR ID IN ID . COLON

    COLON           shift and go to state 136


state 124

    (75) for_loop_range -> FOR ID IN range . COLON

    COLON           shift and go to state 137


state 125

    (79) for_loop_lst -> FOR ID IN non_primitive_type . COLON

    COLON           shift and go to state 138


state 126

    (76) range -> RANGE . LPAREN expression RPAREN
    (77) range -> RANGE . LPAREN expression COMMA expression RPAREN
    (78) range -> RANGE . LPAREN expression COMMA expression COMMA expression RPAREN

    LPAREN          shift and go to state 139


state 127

    (22) assignment -> ID COLON type ASSIGN expression . NEWLINE
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    NEWLINE         shift and go to state 140
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 128

    (15) non_primitive_type -> LBRACKET type RBRACKET .

    ASSIGN          reduce using rule 15 (non_primitive_type -> LBRACKET type RBRACKET .)
    RBRACKET        reduce using rule 15 (non_primitive_type -> LBRACKET type RBRACKET .)
    RPAREN          reduce using rule 15 (non_primitive_type -> LBRACKET type RBRACKET .)
    COLON           reduce using rule 15 (non_primitive_type -> LBRACKET type RBRACKET .)
    COMMA           reduce using rule 15 (non_primitive_type -> LBRACKET type RBRACKET .)


state 129

    (16) non_primitive_type -> LPAREN type RPAREN .

    ASSIGN          reduce using rule 16 (non_primitive_type -> LPAREN type RPAREN .)
    RBRACKET        reduce using rule 16 (non_primitive_type -> LPAREN type RPAREN .)
    RPAREN          reduce using rule 16 (non_primitive_type -> LPAREN type RPAREN .)
    COLON           reduce using rule 16 (non_primitive_type -> LPAREN type RPAREN .)
    COMMA           reduce using rule 16 (non_primitive_type -> LPAREN type RPAREN .)


state 130

    (69) argument_lst -> argument_lst COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    COMMA           reduce using rule 69 (argument_lst -> argument_lst COMMA expression .)
    RPAREN          reduce using rule 69 (argument_lst -> argument_lst COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 131

    (65) parameter -> ID COLON . type
    (9) type -> . primitive_type
    (10) type -> . non_primitive_type
    (11) primitive_type -> . TINT
    (12) primitive_type -> . TSTR
    (13) primitive_type -> . TFLOAT
    (14) primitive_type -> . TBOOL
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    TINT            shift and go to state 53
    TSTR            shift and go to state 54
    TFLOAT          shift and go to state 55
    TBOOL           shift and go to state 56
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    type                           shift and go to state 141
    primitive_type                 shift and go to state 51
    non_primitive_type             shift and go to state 52

state 132

    (60) function_dec -> DEF ID LPAREN paramter_or_empty RPAREN . FUNCTIONANNOTATION type COLON

    FUNCTIONANNOTATION shift and go to state 142


state 133

    (63) parameter_lst -> parameter_lst COMMA . parameter
    (65) parameter -> . ID COLON type

    ID              shift and go to state 99

    parameter                      shift and go to state 143

state 134

    (43) expression -> expression APPEND LPAREN expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          shift and go to state 144
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 135

    (45) tuple -> LPAREN expression COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          reduce using rule 45 (tuple -> LPAREN expression COMMA expression .)
    COMMA           reduce using rule 45 (tuple -> LPAREN expression COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 136

    (80) for_loop_lst -> FOR ID IN ID COLON .

    NEWLINE         reduce using rule 80 (for_loop_lst -> FOR ID IN ID COLON .)


state 137

    (75) for_loop_range -> FOR ID IN range COLON .

    NEWLINE         reduce using rule 75 (for_loop_range -> FOR ID IN range COLON .)


state 138

    (79) for_loop_lst -> FOR ID IN non_primitive_type COLON .

    NEWLINE         reduce using rule 79 (for_loop_lst -> FOR ID IN non_primitive_type COLON .)


state 139

    (76) range -> RANGE LPAREN . expression RPAREN
    (77) range -> RANGE LPAREN . expression COMMA expression RPAREN
    (78) range -> RANGE LPAREN . expression COMMA expression COMMA expression RPAREN
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 145
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 140

    (22) assignment -> ID COLON type ASSIGN expression NEWLINE .

    $end            reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    ID              reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    DEF             reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    RETURN          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    IF              reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    ELIF            reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    ELSE            reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    WHILE           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    FOR             reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    PLUS            reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    MINUS           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    TIMES           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    DIVIDE          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    MODULE          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    EQGREATER       reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    EQLESS          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    GREATER         reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    LESS            reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    EQUAL           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    NOTEQUAL        reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    OR              reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    AND             reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    XOR             reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    APPEND          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    NEWLINE         reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    COLON           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    COMMA           reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    RPAREN          reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)
    RBRACKET        reduce using rule 22 (assignment -> ID COLON type ASSIGN expression NEWLINE .)


state 141

    (65) parameter -> ID COLON type .

    COMMA           reduce using rule 65 (parameter -> ID COLON type .)
    RPAREN          reduce using rule 65 (parameter -> ID COLON type .)


state 142

    (60) function_dec -> DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION . type COLON
    (9) type -> . primitive_type
    (10) type -> . non_primitive_type
    (11) primitive_type -> . TINT
    (12) primitive_type -> . TSTR
    (13) primitive_type -> . TFLOAT
    (14) primitive_type -> . TBOOL
    (15) non_primitive_type -> . LBRACKET type RBRACKET
    (16) non_primitive_type -> . LPAREN type RPAREN

    TINT            shift and go to state 53
    TSTR            shift and go to state 54
    TFLOAT          shift and go to state 55
    TBOOL           shift and go to state 56
    LBRACKET        shift and go to state 57
    LPAREN          shift and go to state 58

    type                           shift and go to state 146
    primitive_type                 shift and go to state 51
    non_primitive_type             shift and go to state 52

state 143

    (63) parameter_lst -> parameter_lst COMMA parameter .

    COMMA           reduce using rule 63 (parameter_lst -> parameter_lst COMMA parameter .)
    RPAREN          reduce using rule 63 (parameter_lst -> parameter_lst COMMA parameter .)


state 144

    (43) expression -> expression APPEND LPAREN expression RPAREN .

    PLUS            reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    MINUS           reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    TIMES           reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    MODULE          reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    EQGREATER       reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    EQLESS          reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    GREATER         reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    LESS            reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    EQUAL           reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    OR              reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    AND             reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    XOR             reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    APPEND          reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    NEWLINE         reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    COLON           reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    COMMA           reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    RPAREN          reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 43 (expression -> expression APPEND LPAREN expression RPAREN .)


state 145

    (76) range -> RANGE LPAREN expression . RPAREN
    (77) range -> RANGE LPAREN expression . COMMA expression RPAREN
    (78) range -> RANGE LPAREN expression . COMMA expression COMMA expression RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          shift and go to state 147
    COMMA           shift and go to state 148
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 146

    (60) function_dec -> DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type . COLON

    COLON           shift and go to state 149


state 147

    (76) range -> RANGE LPAREN expression RPAREN .

    COLON           reduce using rule 76 (range -> RANGE LPAREN expression RPAREN .)


state 148

    (77) range -> RANGE LPAREN expression COMMA . expression RPAREN
    (78) range -> RANGE LPAREN expression COMMA . expression COMMA expression RPAREN
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 150
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 149

    (60) function_dec -> DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON .

    NEWLINE         reduce using rule 60 (function_dec -> DEF ID LPAREN paramter_or_empty RPAREN FUNCTIONANNOTATION type COLON .)


state 150

    (77) range -> RANGE LPAREN expression COMMA expression . RPAREN
    (78) range -> RANGE LPAREN expression COMMA expression . COMMA expression RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          shift and go to state 152
    COMMA           shift and go to state 151
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 151

    (78) range -> RANGE LPAREN expression COMMA expression COMMA . expression RPAREN
    (6) expression -> . ID
    (7) expression -> . assignment
    (8) expression -> . primitive_literal
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression TIMES expression
    (26) expression -> . expression DIVIDE expression
    (27) expression -> . expression MODULE expression
    (28) expression -> . expression EQGREATER expression
    (29) expression -> . expression EQLESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression LESS expression
    (32) expression -> . expression EQUAL expression
    (33) expression -> . expression NOTEQUAL expression
    (34) expression -> . expression OR expression
    (35) expression -> . expression AND expression
    (36) expression -> . expression XOR expression
    (37) expression -> . MINUS expression
    (38) expression -> . NOT expression
    (39) expression -> . LBRACKET RBRACKET
    (42) expression -> . list RBRACKET
    (43) expression -> . expression APPEND LPAREN expression RPAREN
    (44) expression -> . LPAREN RPAREN
    (47) expression -> . tuple RPAREN
    (48) expression -> . LPAREN expression RPAREN
    (21) assignment -> . ID ASSIGN expression NEWLINE
    (22) assignment -> . ID COLON type ASSIGN expression NEWLINE
    (17) primitive_literal -> . INTEGER
    (18) primitive_literal -> . FLOAT
    (19) primitive_literal -> . STRING
    (20) primitive_literal -> . BOOL
    (40) list -> . LBRACKET expression
    (41) list -> . list COMMA expression
    (45) tuple -> . LPAREN expression COMMA expression
    (46) tuple -> . tuple COMMA expression

    ID              shift and go to state 31
    MINUS           shift and go to state 34
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LPAREN          shift and go to state 38
    INTEGER         shift and go to state 40
    FLOAT           shift and go to state 41
    STRING          shift and go to state 42
    BOOL            shift and go to state 43

    expression                     shift and go to state 153
    assignment                     shift and go to state 32
    primitive_literal              shift and go to state 33
    list                           shift and go to state 37
    tuple                          shift and go to state 39

state 152

    (77) range -> RANGE LPAREN expression COMMA expression RPAREN .

    COLON           reduce using rule 77 (range -> RANGE LPAREN expression COMMA expression RPAREN .)


state 153

    (78) range -> RANGE LPAREN expression COMMA expression COMMA expression . RPAREN
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . TIMES expression
    (26) expression -> expression . DIVIDE expression
    (27) expression -> expression . MODULE expression
    (28) expression -> expression . EQGREATER expression
    (29) expression -> expression . EQLESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . LESS expression
    (32) expression -> expression . EQUAL expression
    (33) expression -> expression . NOTEQUAL expression
    (34) expression -> expression . OR expression
    (35) expression -> expression . AND expression
    (36) expression -> expression . XOR expression
    (43) expression -> expression . APPEND LPAREN expression RPAREN

    RPAREN          shift and go to state 154
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    TIMES           shift and go to state 66
    DIVIDE          shift and go to state 67
    MODULE          shift and go to state 68
    EQGREATER       shift and go to state 69
    EQLESS          shift and go to state 70
    GREATER         shift and go to state 71
    LESS            shift and go to state 72
    EQUAL           shift and go to state 73
    NOTEQUAL        shift and go to state 74
    OR              shift and go to state 75
    AND             shift and go to state 76
    XOR             shift and go to state 77
    APPEND          shift and go to state 78


state 154

    (78) range -> RANGE LPAREN expression COMMA expression COMMA expression RPAREN .

    COLON           reduce using rule 78 (range -> RANGE LPAREN expression COMMA expression COMMA expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COLON in state 31 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (program -> statement)
WARNING: rejected rule (statement_lst -> statement) in state 2
